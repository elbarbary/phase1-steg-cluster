# Nginx Load Balancer Configuration for Phase-1 Steg Cluster
# Provides automatic failover, health checks, and round-robin load balancing

upstream stego_cluster {
    # Round-robin load balancing (default)
    # Automatically excludes failed nodes after 2 failed checks
    
    # Node 1 - 172.20.10.2:8081
    server 172.20.10.2:8081 max_fails=2 fail_timeout=5s;
    
    # Node 2 - 172.20.10.3:8082
    server 172.20.10.3:8082 max_fails=2 fail_timeout=5s;
    
    # Node 3 - 172.20.10.4:8083
    server 172.20.10.4:8083 max_fails=2 fail_timeout=5s;
    
    # Keep connections alive for better performance
    keepalive 32;
}

server {
    listen 80;
    server_name _;

    # Increase timeouts for large file uploads (steganography images)
    client_max_body_size 50M;
    client_body_timeout 120s;
    
    # Proxy timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Health check endpoint (nginx will use this automatically)
    location /healthz {
        proxy_pass http://stego_cluster;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Fast health check timeout
        proxy_connect_timeout 2s;
        proxy_read_timeout 2s;
    }

    # API endpoints - Load balanced across all healthy nodes
    location /api/ {
        proxy_pass http://stego_cluster;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enable connection reuse
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Error handling - try next server on failure
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 3;
    }

    # Cluster status endpoint
    location /cluster/status {
        proxy_pass http://stego_cluster;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
    }

    # Admin endpoints - Direct to specific nodes (no load balancing)
    location /admin/ {
        proxy_pass http://stego_cluster;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No retry for admin operations
        proxy_next_upstream off;
    }

    # Raft RPC endpoints (internal, should not be exposed externally)
    location /raft/ {
        # Block external access to Raft endpoints
        deny all;
        return 403;
    }

    # Nginx status page (for monitoring)
    location /nginx_status {
        stub_status;
        allow 127.0.0.1;
        allow 172.20.10.0/24;  # Internal network
        deny all;
    }
}

# Optional: HTTPS configuration
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#
#     # Same proxy configuration as above
#     location / {
#         proxy_pass http://stego_cluster;
#         # ... rest of proxy settings ...
#     }
# }
